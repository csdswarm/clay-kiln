/**
 *
 * VueTranspiler Class
 *
 * Used to transpile HTML generated by handlebars into HTML for use by Vue.
 *
 */

import cheerio from 'cheerio'
import URL from 'url-parse'

/**
 * returns if a domain is part of the entercom approved list
 * ** NOTE: This is duplicated in the app also until merged into the release-radium branch where it can be shared
 * @param {string} hostname
 * @return {boolean}
 */
const isEntercomDomain = (hostname) => {
  const SEO_FOLLOW_DOMAINS = ['1thingus.com,entercom.com', 'culinarykitchenchicago.com', 'dfwrestaurantweek.com',
    'musictowndetroit.com', 'mensroomlive.com', 'jimrome.com', 'radio.com']
  const domain = hostname.split('.').reverse().slice(0, 2).reverse().join('.')

  return SEO_FOLLOW_DOMAINS.includes(domain)
}

export default class {
  /**
   *
   * Transpiles html generated by handlebars into html compatible with vue logic.
   *
   * @param {string} handlebarsHtml - HTML generated by handlebars templates.
   * @returns {string} - Vue compatible HTML.
   */
  transpile (handlebarsHtml) {
    let transpiledHtml = handlebarsHtml

    transpiledHtml = this._prepLinksForSpaRouter(transpiledHtml)

    return transpiledHtml
  }

  /**
   *
   * Adds classes to appropiate <a> tags for SPA router logic to hook into.
   *
   * @param {string} html - HTML to update <a> tags in.
   * @returns {string} - HTML with updated links.
   */
  _prepLinksForSpaRouter (html) {
    const $ = cheerio.load(html)

    $('a').each(function () {
      const $link = $(this)
      const $href = $link.attr('href')
      const $target = String($link.attr('target')).toLowerCase()

      if ($href) {
        const linkParts = new URL($href)

        if (linkParts.hostname === window.location.hostname && linkParts.pathname !== '/audio') {
          if (!$link.hasClass('outbound-link') && !($href || '').startsWith('#') && $target !== '_blank') {
            $link.addClass('spa-link')
          }
        } else {
          if (!isEntercomDomain(linkParts.hostname)) {
            $link.attr('rel', 'nofollow')
          }

          $link.addClass('outbound-link')
          $link.attr('target', '_blank')
        }
      }
    })

    return $.html()
  }
}
