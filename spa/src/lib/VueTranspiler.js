/**
 *
 * VueTranspiler Class
 *
 * Used to transpile HTML generated by handlebars into HTML for use by Vue.
 *
 */

import cheerio from 'cheerio'
import URL from 'url-parse'

export default class {
  /**
   *
   * Transpiles html generated by handlebars into html compatible with vue logic.
   *
   * @param {string} handlebarsHtml - HTML generated by handlebars templates.
   * @returns {string} - Vue compatible HTML.
   */
  transpile (handlebarsHtml) {
    let transpiledHtml = handlebarsHtml

    transpiledHtml = this._prepLinksForSpaRouter(transpiledHtml)

    return transpiledHtml
  }

  /**
   *
   * Adds classes to appropiate <a> tags for SPA router logic to hook into.
   *
   * @param {string} html - HTML to update <a> tags in.
   * @returns {string} - HTML with updated links.
   */
  _prepLinksForSpaRouter (html) {
    const $ = cheerio.load(html)

    $('a').each(function () {
      const $link = $(this)
      const $href = $link.attr('href')
      if ($href) {
        const linkParts = new URL($href)
        if (linkParts.hostname === window.location.hostname && linkParts.pathname !== '/audio') {
          if (!$link.hasClass('outbound-link') && !($href || '').startsWith('#')) {
            $link.addClass('spa-link')
          }
        } else {
          $link.addClass('outbound-link')
          $link.attr('target', '_blank')
        }
      }
    })

    return $.html()
  }
}
